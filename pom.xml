<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>tr</groupId>
    <artifactId>CHF-TopoResolver</artifactId>
    <version>1.0</version>

    <properties>
        <java.version>1.8</java.version>
        <stanford-nlp.version>3.9.1</stanford-nlp.version>
        <slf4j.version>1.7.25</slf4j.version>
        <log4j.version>2.15.0</log4j.version>
        <sqlite-jdbc.version>3.21.0.1</sqlite-jdbc.version>
        <weka.version>3.8.2</weka.version>
        <jedis.version>2.9.0</jedis.version>
        <guava.version>23.6</guava.version>
        <gson.version>2.8.2</gson.version>
        <jena.version>2.12.1</jena.version>
        <google-cloud.version>0.32.0-alpha</google-cloud.version>
        <argparse4j.version>0.8.1</argparse4j.version>

        <junit-jupiter.version>5.0.2</junit-jupiter.version>
        <junit.platform.version>1.0.2</junit.platform.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <arg.recognizer>ner</arg.recognizer>
        <arg.resolver/>
        <arg.op>validate</arg.op>
        <arg.dataset/>
        <arg.trials>10</arg.trials>
        <arg.matcher>distance</arg.matcher>
        <arg.threshold>0.55</arg.threshold>
        <arg.model/>
        <arg.geonames.path/>
        <arg.redis.host>localhost</arg.redis.host>
        <arg.redis.port>6384</arg.redis.port>
    </properties>


    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>

                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.20</version>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.platform</groupId>
                        <artifactId>junit-platform-surefire-provider</artifactId>
                        <version>${junit.platform.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

        </plugins>
    </build>

    <profiles>
        <profile>
            <id>evaluator</id>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.6.0</version>
                        <configuration>
                            <executable>${java.home}/bin/java</executable>
                            <arguments>
                                <argument>-Xms1g</argument>
                                <argument>-Xmx4g</argument>
                                <argument>-XX:+UseCompressedOops</argument>
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>tr.geotagging.GeoTaggingExperiment</argument>
                                <argument>--recognizer</argument>
                                <argument>${arg.recognizer}</argument>
                                <argument>--resolver</argument>
                                <argument>${arg.resolver}</argument>
                                <argument>--data</argument>
                                <argument>${arg.dataset}</argument>
                                <argument>--matcher</argument>
                                <argument>${arg.matcher}</argument>
                                <argument>--threshold</argument>
                                <argument>${arg.threshold}</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>

        </profile>


        <profile>
            <id>adaptive-eval</id>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.6.0</version>
                        <configuration>
                            <executable>${java.home}/bin/java</executable>
                            <arguments>
                                <argument>-Xms1g</argument>
                                <argument>-Xmx4g</argument>
                                <argument>-XX:+UseCompressedOops</argument>
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>tr.geotagging.GeoTaggingExperiment</argument>
                                <argument>--recognizer</argument>
                                <argument>${arg.recognizer}</argument>
                                <argument>--resolver</argument>
                                <argument>adaptive</argument>
                                <argument>--data</argument>
                                <argument>${arg.dataset}</argument>
                                <argument>--matcher</argument>
                                <argument>${arg.matcher}</argument>
                                <argument>--model</argument>
                                <argument>${arg.model}</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>

        </profile>


        <profile>
            <id>adaptive-build</id>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.6.0</version>
                        <configuration>
                            <executable>${java.home}/bin/java</executable>
                            <arguments>
                                <argument>-Xms512m</argument>
                                <argument>-Xmx3g</argument>
                                <argument>-XX:+UseCompressedOops</argument>
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>tr.geotagging.resolution.lieberman.LiebermanAdaptiveModelBuilder
                                </argument>
                                <argument>${arg.op}</argument>
                                <argument>--recognizer</argument>
                                <argument>${arg.recognizer}</argument>
                                <argument>--data</argument>
                                <argument>${arg.dataset}</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>

        </profile>

        <profile>
            <id>import</id>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.6.0</version>
                        <executions>
                            <execution>
                                <phase>deploy</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <executable>${java.home}/bin/java</executable>
                            <arguments>
                                <argument>-Xms1g</argument>
                                <argument>-Xmx4g</argument>
                                <argument>-XX:+UseCompressedOops</argument>
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>tr.geonames.factory.GeoNamesImporter</argument>
                                <argument>--geonames</argument>
                                <argument>${arg.geonames.path}</argument>
                                <argument>--redis_host</argument>
                                <argument>${arg.redis.host}</argument>
                                <argument>--redis_port</argument>
                                <argument>${arg.redis.port}</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>

        </profile>
    </profiles>


    <dependencies>
        <dependency>
            <groupId>edu.stanford.nlp</groupId>
            <artifactId>stanford-corenlp</artifactId>
            <version>${stanford-nlp.version}</version>
        </dependency>

        <dependency>
            <groupId>edu.stanford.nlp</groupId>
            <artifactId>stanford-corenlp</artifactId>
            <version>${stanford-nlp.version}</version>
            <classifier>models</classifier>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>${sqlite-jdbc.version}</version>
        </dependency>

        <dependency>
            <groupId>nz.ac.waikato.cms.weka</groupId>
            <artifactId>weka-stable</artifactId>
            <version>${weka.version}</version>
        </dependency>

        <dependency>
            <groupId>hr.irb</groupId>
            <artifactId>fastRandomForest</artifactId>
            <version>0.99</version>
            <type>jar</type>
            <systemPath>${basedir}/lib/fast-random-forest/FastRandomForest_0.99.jar</systemPath>
            <scope>system</scope>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>


        <dependency>
            <groupId>javax.xml.parsers</groupId>
            <artifactId>jaxp-api</artifactId>
            <version>1.4.5</version>
        </dependency>

        
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>3.1</version>
        </dependency>

        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>${jedis.version}</version>
        </dependency>

        <dependency>
            <groupId>com.tr.tms.abstractionLayer</groupId>
            <artifactId>calaisModel.java</artifactId>
            <version>8.0-SNAPSHOT</version>
            <systemPath>${basedir}/lib/onecalais/clf-calaisModel.java.jar</systemPath>
            <scope>system</scope>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}-jre</version>
        </dependency>

        <dependency>
            <groupId>net.sourceforge.argparse4j</groupId>
            <artifactId>argparse4j</artifactId>
            <version>${argparse4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.jena</groupId>
            <artifactId>apache-jena-libs</artifactId>
            <type>pom</type>
            <version>${jena.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>log4j</artifactId>
                    <groupId>log4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.apache.jena</groupId>
            <artifactId>jena-arq</artifactId>
            <version>${jena.version}</version>
        </dependency>

        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>1.9.7</version>
        </dependency>

        <dependency>
            <groupId>com.google.cloud</groupId>
            <artifactId>google-cloud</artifactId>
            <version>${google-cloud.version}</version>
        </dependency>

    </dependencies>

</project>